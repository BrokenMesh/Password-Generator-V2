@implements IDisposable

@inject AppStateService AppState

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-sm-12 text-left">
                <h5 class="card-category">Password-Seed</h5>
                <h2 class="card-title">V1 Seed Password</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div style="height: 200px;">
            <div class="pwd-v1-container">
                <div class="pwd-v1-centered">
                    <label for="v1-pwd">Password</label>
                    <input value="@AppState.V1Seed" @oninput="OnPasswordChanged" type="password" class="form-control" id="v1-pwd">
                    <small for="v1-pwd">When using V1 make sure the password is never used anywhere else and not known by anyone.</small>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .pwd-v1-container {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center; 
        justify-content: center;
    }

    .pwd-v1-centered {
        width: 400px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        gap: 4px;
    }
</style>

@code {

    protected override void OnInitialized() {
        AppState.V1SeedChanged += OnV1KeyChanged;
    }

    public void Dispose() {
        AppState.V1SeedChanged -= OnV1KeyChanged;
    }

    public async Task OnV1KeyChanged() {
        await InvokeAsync(StateHasChanged);
    }

    private void OnPasswordChanged(ChangeEventArgs _args) {
        string _key = _args.Value as string ?? "";
        AppState.SetV1Key(_key);
    }

}
